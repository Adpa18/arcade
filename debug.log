==12565== Memcheck, a memory error detector
==12565== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==12565== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info
==12565== Command: ./arcade3 ./lib_arcade_ncurses2.so
==12565== Parent PID: 25862
==12565== 
==12565== Conditional jump or move depends on uninitialised value(s)
==12565==    at 0x50F865A: std::string::assign(std::string const&) (in /usr/lib64/libstdc++.so.6.0.19)
==12565==    by 0x4104B8: DualTextComponent::setSubTitle(std::string const&) (in /home/consta_n/rendu/cpp_arcade/arcade3)
==12565==    by 0x40BAEA: ArcadeMenu::updateTexts() (ArcadeMenu.cpp:161)
==12565==    by 0x40AF4B: ArcadeMenu::ArcadeMenu(arcade::Arcade&) (ArcadeMenu.cpp:55)
==12565==    by 0x403488: arcade::Arcade::Run() (Arcade.cpp:207)
==12565==    by 0x40FB7E: main (main.cpp:23)
==12565== 
==12565== Use of uninitialised value of size 8
==12565==    at 0x50F865C: std::string::assign(std::string const&) (in /usr/lib64/libstdc++.so.6.0.19)
==12565==    by 0x4104B8: DualTextComponent::setSubTitle(std::string const&) (in /home/consta_n/rendu/cpp_arcade/arcade3)
==12565==    by 0x40BAEA: ArcadeMenu::updateTexts() (ArcadeMenu.cpp:161)
==12565==    by 0x40AF4B: ArcadeMenu::ArcadeMenu(arcade::Arcade&) (ArcadeMenu.cpp:55)
==12565==    by 0x403488: arcade::Arcade::Run() (Arcade.cpp:207)
==12565==    by 0x40FB7E: main (main.cpp:23)
==12565== 
==12565== Invalid read of size 4
==12565==    at 0x50F865C: std::string::assign(std::string const&) (in /usr/lib64/libstdc++.so.6.0.19)
==12565==    by 0x4104B8: DualTextComponent::setSubTitle(std::string const&) (in /home/consta_n/rendu/cpp_arcade/arcade3)
==12565==    by 0x40BAEA: ArcadeMenu::updateTexts() (ArcadeMenu.cpp:161)
==12565==    by 0x40AF4B: ArcadeMenu::ArcadeMenu(arcade::Arcade&) (ArcadeMenu.cpp:55)
==12565==    by 0x403488: arcade::Arcade::Run() (Arcade.cpp:207)
==12565==    by 0x40FB7E: main (main.cpp:23)
==12565==  Address 0x1000000022 is not stack'd, malloc'd or (recently) free'd
==12565== 
==12565== 
==12565== Process terminating with default action of signal 11 (SIGSEGV)
==12565==  Access not within mapped region at address 0x1000000022
==12565==    at 0x50F865C: std::string::assign(std::string const&) (in /usr/lib64/libstdc++.so.6.0.19)
==12565==    by 0x4104B8: DualTextComponent::setSubTitle(std::string const&) (in /home/consta_n/rendu/cpp_arcade/arcade3)
==12565==    by 0x40BAEA: ArcadeMenu::updateTexts() (ArcadeMenu.cpp:161)
==12565==    by 0x40AF4B: ArcadeMenu::ArcadeMenu(arcade::Arcade&) (ArcadeMenu.cpp:55)
==12565==    by 0x403488: arcade::Arcade::Run() (Arcade.cpp:207)
==12565==    by 0x40FB7E: main (main.cpp:23)
==12565==  If you believe this happened as a result of a stack
==12565==  overflow in your program's main thread (unlikely but
==12565==  possible), you can try to increase the size of the
==12565==  main thread stack using the --main-stacksize= flag.
==12565==  The main thread stack size used in this run was 8388608.
==12565== 
==12565== HEAP SUMMARY:
==12565==     in use at exit: 271,115 bytes in 928 blocks
==12565==   total heap usage: 1,214 allocs, 286 frees, 379,033 bytes allocated
==12565== 
==12565== LEAK SUMMARY:
==12565==    definitely lost: 144 bytes in 3 blocks
==12565==    indirectly lost: 0 bytes in 0 blocks
==12565==      possibly lost: 843 bytes in 22 blocks
==12565==    still reachable: 270,128 bytes in 903 blocks
==12565==         suppressed: 0 bytes in 0 blocks
==12565== Rerun with --leak-check=full to see details of leaked memory
==12565== 
==12565== For counts of detected and suppressed errors, rerun with: -v
==12565== Use --track-origins=yes to see where uninitialised values come from
==12565== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 0 from 0)
