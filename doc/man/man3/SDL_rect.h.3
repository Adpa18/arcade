.TH "/home/wery_a/rendu/CPP/cpp_arcade/library/sdl2/include/SDL_rect.h" 3 "Mercredi 30 Mars 2016" "Version 1" "Arcade" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/home/wery_a/rendu/CPP/cpp_arcade/library/sdl2/include/SDL_rect.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'SDL_stdinc\&.h'\fP
.br
\fC#include 'SDL_error\&.h'\fP
.br
\fC#include 'SDL_pixels\&.h'\fP
.br
\fC#include 'SDL_rwops\&.h'\fP
.br
\fC#include 'begin_code\&.h'\fP
.br
\fC#include 'close_code\&.h'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBSDL_Point\fP"
.br
.RI "\fIThe structure that defines a point\&. \fP"
.ti -1c
.RI "struct \fBSDL_Rect\fP"
.br
.RI "\fIA rectangle, with the origin at the upper left\&. \fP"
.in -1c
.SS "Définitions de type"

.in +1c
.ti -1c
.RI "typedef struct \fBSDL_Point\fP \fBSDL_Point\fP"
.br
.RI "\fIThe structure that defines a point\&. \fP"
.ti -1c
.RI "typedef struct \fBSDL_Rect\fP \fBSDL_Rect\fP"
.br
.RI "\fIA rectangle, with the origin at the upper left\&. \fP"
.in -1c
.SS "Fonctions"

.in +1c
.ti -1c
.RI "\fBSDL_FORCE_INLINE\fP \fBSDL_bool\fP \fBSDL_PointInRect\fP (\fBconst\fP \fBSDL_Point\fP *\fBp\fP, \fBconst\fP \fBSDL_Rect\fP *\fBr\fP)"
.br
.RI "\fIReturns true if point resides inside a rectangle\&. \fP"
.ti -1c
.RI "\fBSDL_FORCE_INLINE\fP \fBSDL_bool\fP \fBSDL_RectEmpty\fP (\fBconst\fP \fBSDL_Rect\fP *\fBr\fP)"
.br
.RI "\fIReturns true if the rectangle has no area\&. \fP"
.ti -1c
.RI "\fBSDL_FORCE_INLINE\fP \fBSDL_bool\fP \fBSDL_RectEquals\fP (\fBconst\fP \fBSDL_Rect\fP *\fBa\fP, \fBconst\fP \fBSDL_Rect\fP *\fBb\fP)"
.br
.RI "\fIReturns true if the two rectangles are equal\&. \fP"
.ti -1c
.RI "\fBDECLSPEC\fP \fBSDL_bool\fP \fBSDLCALL\fP \fBSDL_HasIntersection\fP (\fBconst\fP \fBSDL_Rect\fP *A, \fBconst\fP \fBSDL_Rect\fP *B)"
.br
.RI "\fIDetermine whether two rectangles intersect\&. \fP"
.ti -1c
.RI "\fBDECLSPEC\fP \fBSDL_bool\fP \fBSDLCALL\fP \fBSDL_IntersectRect\fP (\fBconst\fP \fBSDL_Rect\fP *A, \fBconst\fP \fBSDL_Rect\fP *B, \fBSDL_Rect\fP *\fBresult\fP)"
.br
.RI "\fICalculate the intersection of two rectangles\&. \fP"
.ti -1c
.RI "\fBDECLSPEC\fP \fBvoid\fP \fBSDLCALL\fP \fBSDL_UnionRect\fP (\fBconst\fP \fBSDL_Rect\fP *A, \fBconst\fP \fBSDL_Rect\fP *B, \fBSDL_Rect\fP *\fBresult\fP)"
.br
.RI "\fICalculate the union of two rectangles\&. \fP"
.ti -1c
.RI "\fBDECLSPEC\fP \fBSDL_bool\fP \fBSDLCALL\fP \fBSDL_EnclosePoints\fP (\fBconst\fP \fBSDL_Point\fP *\fBpoints\fP, \fBint\fP \fBcount\fP, \fBconst\fP \fBSDL_Rect\fP *clip, \fBSDL_Rect\fP *\fBresult\fP)"
.br
.RI "\fICalculate a minimal rectangle enclosing a set of points\&. \fP"
.ti -1c
.RI "\fBDECLSPEC\fP \fBSDL_bool\fP \fBSDLCALL\fP \fBSDL_IntersectRectAndLine\fP (\fBconst\fP \fBSDL_Rect\fP *rect, \fBint\fP *X1, \fBint\fP *Y1, \fBint\fP *X2, \fBint\fP *Y2)"
.br
.RI "\fICalculate the intersection of a rectangle and line segment\&. \fP"
.in -1c
.SH "Description détaillée"
.PP 
Header file for SDL_rect definition and management functions\&. 
.PP
Définition dans le fichier \fBSDL_rect\&.h\fP\&.
.SH "Documentation des définitions de type"
.PP 
.SS "typedef struct \fBSDL_Point\fP  \fBSDL_Point\fP"

.PP
The structure that defines a point\&. 
.PP
\fBVoir également:\fP
.RS 4
\fBSDL_EnclosePoints\fP 
.PP
\fBSDL_PointInRect\fP 
.RE
.PP

.SS "typedef struct \fBSDL_Rect\fP  \fBSDL_Rect\fP"

.PP
A rectangle, with the origin at the upper left\&. 
.PP
\fBVoir également:\fP
.RS 4
\fBSDL_RectEmpty\fP 
.PP
\fBSDL_RectEquals\fP 
.PP
\fBSDL_HasIntersection\fP 
.PP
\fBSDL_IntersectRect\fP 
.PP
\fBSDL_UnionRect\fP 
.PP
\fBSDL_EnclosePoints\fP 
.RE
.PP

.SH "Documentation des fonctions"
.PP 
.SS "\fBDECLSPEC\fP \fBSDL_bool\fP \fBSDLCALL\fP SDL_EnclosePoints (\fBconst\fP \fBSDL_Point\fP * points, \fBint\fP count, \fBconst\fP \fBSDL_Rect\fP * clip, \fBSDL_Rect\fP * result)"

.PP
Calculate a minimal rectangle enclosing a set of points\&. 
.PP
\fBRenvoie:\fP
.RS 4
SDL_TRUE if any points were within the clipping rect 
.RE
.PP

.SS "\fBDECLSPEC\fP \fBSDL_bool\fP \fBSDLCALL\fP SDL_HasIntersection (\fBconst\fP \fBSDL_Rect\fP * A, \fBconst\fP \fBSDL_Rect\fP * B)"

.PP
Determine whether two rectangles intersect\&. 
.PP
\fBRenvoie:\fP
.RS 4
SDL_TRUE if there is an intersection, SDL_FALSE otherwise\&. 
.RE
.PP

.SS "\fBDECLSPEC\fP \fBSDL_bool\fP \fBSDLCALL\fP SDL_IntersectRect (\fBconst\fP \fBSDL_Rect\fP * A, \fBconst\fP \fBSDL_Rect\fP * B, \fBSDL_Rect\fP * result)"

.PP
Calculate the intersection of two rectangles\&. 
.PP
\fBRenvoie:\fP
.RS 4
SDL_TRUE if there is an intersection, SDL_FALSE otherwise\&. 
.RE
.PP

.SS "\fBDECLSPEC\fP \fBSDL_bool\fP \fBSDLCALL\fP SDL_IntersectRectAndLine (\fBconst\fP \fBSDL_Rect\fP * rect, \fBint\fP * X1, \fBint\fP * Y1, \fBint\fP * X2, \fBint\fP * Y2)"

.PP
Calculate the intersection of a rectangle and line segment\&. 
.PP
\fBRenvoie:\fP
.RS 4
SDL_TRUE if there is an intersection, SDL_FALSE otherwise\&. 
.RE
.PP

.SS "\fBSDL_FORCE_INLINE\fP \fBSDL_bool\fP SDL_PointInRect (\fBconst\fP \fBSDL_Point\fP * p, \fBconst\fP \fBSDL_Rect\fP * r)"

.PP
Returns true if point resides inside a rectangle\&. 
.PP
Définition à la ligne 73 du fichier SDL_rect\&.h\&.
.SS "\fBSDL_FORCE_INLINE\fP \fBSDL_bool\fP SDL_RectEmpty (\fBconst\fP \fBSDL_Rect\fP * r)"

.PP
Returns true if the rectangle has no area\&. 
.PP
Définition à la ligne 82 du fichier SDL_rect\&.h\&.
.SS "\fBSDL_FORCE_INLINE\fP \fBSDL_bool\fP SDL_RectEquals (\fBconst\fP \fBSDL_Rect\fP * a, \fBconst\fP \fBSDL_Rect\fP * b)"

.PP
Returns true if the two rectangles are equal\&. 
.PP
Définition à la ligne 90 du fichier SDL_rect\&.h\&.
.SS "\fBDECLSPEC\fP \fBvoid\fP \fBSDLCALL\fP SDL_UnionRect (\fBconst\fP \fBSDL_Rect\fP * A, \fBconst\fP \fBSDL_Rect\fP * B, \fBSDL_Rect\fP * result)"

.PP
Calculate the union of two rectangles\&. 
.SH "Auteur"
.PP 
Généré automatiquement par Doxygen pour Arcade à partir du code source\&.
