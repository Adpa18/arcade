.TH "/home/wery_a/rendu/CPP/cpp_arcade/library/sdl2/include/SDL_keyboard.h" 3 "Mercredi 30 Mars 2016" "Version 1" "Arcade" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/home/wery_a/rendu/CPP/cpp_arcade/library/sdl2/include/SDL_keyboard.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'SDL_stdinc\&.h'\fP
.br
\fC#include 'SDL_error\&.h'\fP
.br
\fC#include 'SDL_keycode\&.h'\fP
.br
\fC#include 'SDL_video\&.h'\fP
.br
\fC#include 'begin_code\&.h'\fP
.br
\fC#include 'close_code\&.h'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBSDL_Keysym\fP"
.br
.RI "\fIThe SDL keysym structure, used in key events\&. \fP"
.in -1c
.SS "Définitions de type"

.in +1c
.ti -1c
.RI "typedef struct \fBSDL_Keysym\fP \fBSDL_Keysym\fP"
.br
.RI "\fIThe SDL keysym structure, used in key events\&. \fP"
.in -1c
.SS "Fonctions"

.in +1c
.ti -1c
.RI "\fBDECLSPEC\fP \fBSDL_Window\fP *\fBSDLCALL\fP \fBSDL_GetKeyboardFocus\fP (\fBvoid\fP)"
.br
.RI "\fIGet the window which currently has keyboard focus\&. \fP"
.ti -1c
.RI "\fBDECLSPEC\fP \fBconst\fP \fBUint8\fP *\fBSDLCALL\fP \fBSDL_GetKeyboardState\fP (\fBint\fP *numkeys)"
.br
.RI "\fIGet a snapshot of the current state of the keyboard\&. \fP"
.ti -1c
.RI "\fBDECLSPEC\fP \fBSDL_Keymod\fP \fBSDLCALL\fP \fBSDL_GetModState\fP (\fBvoid\fP)"
.br
.RI "\fIGet the current key modifier state for the keyboard\&. \fP"
.ti -1c
.RI "\fBDECLSPEC\fP \fBvoid\fP \fBSDLCALL\fP \fBSDL_SetModState\fP (\fBSDL_Keymod\fP modstate)"
.br
.RI "\fISet the current key modifier state for the keyboard\&. \fP"
.ti -1c
.RI "\fBDECLSPEC\fP \fBSDL_Keycode\fP \fBSDLCALL\fP \fBSDL_GetKeyFromScancode\fP (\fBSDL_Scancode\fP scancode)"
.br
.RI "\fIGet the key code corresponding to the given scancode according to the current keyboard layout\&. \fP"
.ti -1c
.RI "\fBDECLSPEC\fP \fBSDL_Scancode\fP \fBSDLCALL\fP \fBSDL_GetScancodeFromKey\fP (\fBSDL_Keycode\fP key)"
.br
.RI "\fIGet the scancode corresponding to the given key code according to the current keyboard layout\&. \fP"
.ti -1c
.RI "\fBDECLSPEC\fP \fBconst\fP char *\fBSDLCALL\fP \fBSDL_GetScancodeName\fP (\fBSDL_Scancode\fP scancode)"
.br
.RI "\fIGet a human-readable name for a scancode\&. \fP"
.ti -1c
.RI "\fBDECLSPEC\fP \fBSDL_Scancode\fP \fBSDLCALL\fP \fBSDL_GetScancodeFromName\fP (\fBconst\fP char *\fBname\fP)"
.br
.RI "\fIGet a scancode from a human-readable name\&. \fP"
.ti -1c
.RI "\fBDECLSPEC\fP \fBconst\fP char *\fBSDLCALL\fP \fBSDL_GetKeyName\fP (\fBSDL_Keycode\fP key)"
.br
.RI "\fIGet a human-readable name for a key\&. \fP"
.ti -1c
.RI "\fBDECLSPEC\fP \fBSDL_Keycode\fP \fBSDLCALL\fP \fBSDL_GetKeyFromName\fP (\fBconst\fP char *\fBname\fP)"
.br
.RI "\fIGet a key code from a human-readable name\&. \fP"
.ti -1c
.RI "\fBDECLSPEC\fP \fBvoid\fP \fBSDLCALL\fP \fBSDL_StartTextInput\fP (\fBvoid\fP)"
.br
.RI "\fIStart accepting Unicode text input events\&. This function will show the on-screen keyboard if supported\&. \fP"
.ti -1c
.RI "\fBDECLSPEC\fP \fBSDL_bool\fP \fBSDLCALL\fP \fBSDL_IsTextInputActive\fP (\fBvoid\fP)"
.br
.RI "\fIReturn whether or not Unicode text input events are enabled\&. \fP"
.ti -1c
.RI "\fBDECLSPEC\fP \fBvoid\fP \fBSDLCALL\fP \fBSDL_StopTextInput\fP (\fBvoid\fP)"
.br
.RI "\fIStop receiving any text input events\&. This function will hide the on-screen keyboard if supported\&. \fP"
.ti -1c
.RI "\fBDECLSPEC\fP \fBvoid\fP \fBSDLCALL\fP \fBSDL_SetTextInputRect\fP (\fBSDL_Rect\fP *rect)"
.br
.RI "\fISet the rectangle used to type Unicode text inputs\&. This is used as a hint for IME and on-screen keyboard placement\&. \fP"
.ti -1c
.RI "\fBDECLSPEC\fP \fBSDL_bool\fP \fBSDLCALL\fP \fBSDL_HasScreenKeyboardSupport\fP (\fBvoid\fP)"
.br
.RI "\fIReturns whether the platform has some screen keyboard support\&. \fP"
.ti -1c
.RI "\fBDECLSPEC\fP \fBSDL_bool\fP \fBSDLCALL\fP \fBSDL_IsScreenKeyboardShown\fP (\fBSDL_Window\fP *window)"
.br
.RI "\fIReturns whether the screen keyboard is shown for given window\&. \fP"
.in -1c
.SH "Description détaillée"
.PP 
Include file for SDL keyboard event handling 
.PP
Définition dans le fichier \fBSDL_keyboard\&.h\fP\&.
.SH "Documentation des définitions de type"
.PP 
.SS "typedef struct \fBSDL_Keysym\fP  \fBSDL_Keysym\fP"

.PP
The SDL keysym structure, used in key events\&. 
.PP
\fBNote:\fP
.RS 4
If you are looking for translated character input, see the \fBSDL_TEXTINPUT\fP event\&. 
.RE
.PP

.SH "Documentation des fonctions"
.PP 
.SS "\fBDECLSPEC\fP \fBSDL_Window\fP* \fBSDLCALL\fP SDL_GetKeyboardFocus (\fBvoid\fP)"

.PP
Get the window which currently has keyboard focus\&. 
.SS "\fBDECLSPEC\fP \fBconst\fP \fBUint8\fP* \fBSDLCALL\fP SDL_GetKeyboardState (\fBint\fP * numkeys)"

.PP
Get a snapshot of the current state of the keyboard\&. 
.PP
\fBParamètres:\fP
.RS 4
\fInumkeys\fP if non-NULL, receives the length of the returned array\&.
.RE
.PP
\fBRenvoie:\fP
.RS 4
An array of key states\&. Indexes into this array are obtained by using \fBSDL_Scancode\fP values\&.
.RE
.PP
\fBExample:\fP 
.PP
.nf
1 const Uint8 *state = SDL_GetKeyboardState(NULL);
2 if ( state[SDL_SCANCODE_RETURN] )   {
3     printf("<RETURN> is pressed\&.\n");
4 }

.fi
.PP
 
.SS "\fBDECLSPEC\fP \fBSDL_Keycode\fP \fBSDLCALL\fP SDL_GetKeyFromName (\fBconst\fP char * name)"

.PP
Get a key code from a human-readable name\&. 
.PP
\fBRenvoie:\fP
.RS 4
key code, or SDLK_UNKNOWN if the name wasn't recognized
.RE
.PP
\fBVoir également:\fP
.RS 4
\fBSDL_Keycode\fP 
.RE
.PP

.SS "\fBDECLSPEC\fP \fBSDL_Keycode\fP \fBSDLCALL\fP SDL_GetKeyFromScancode (\fBSDL_Scancode\fP scancode)"

.PP
Get the key code corresponding to the given scancode according to the current keyboard layout\&. See \fBSDL_Keycode\fP for details\&.
.PP
\fBVoir également:\fP
.RS 4
\fBSDL_GetKeyName()\fP 
.RE
.PP

.SS "\fBDECLSPEC\fP \fBconst\fP char* \fBSDLCALL\fP SDL_GetKeyName (\fBSDL_Keycode\fP key)"

.PP
Get a human-readable name for a key\&. 
.PP
\fBRenvoie:\fP
.RS 4
A pointer to a UTF-8 string that stays valid at least until the next call to this function\&. If you need it around any longer, you must copy it\&. If the key doesn't have a name, this function returns an empty string ('')\&.
.RE
.PP
\fBVoir également:\fP
.RS 4
SDL_Key 
.RE
.PP

.SS "\fBDECLSPEC\fP \fBSDL_Keymod\fP \fBSDLCALL\fP SDL_GetModState (\fBvoid\fP)"

.PP
Get the current key modifier state for the keyboard\&. 
.SS "\fBDECLSPEC\fP \fBSDL_Scancode\fP \fBSDLCALL\fP SDL_GetScancodeFromKey (\fBSDL_Keycode\fP key)"

.PP
Get the scancode corresponding to the given key code according to the current keyboard layout\&. See \fBSDL_Scancode\fP for details\&.
.PP
\fBVoir également:\fP
.RS 4
\fBSDL_GetScancodeName()\fP 
.RE
.PP

.SS "\fBDECLSPEC\fP \fBSDL_Scancode\fP \fBSDLCALL\fP SDL_GetScancodeFromName (\fBconst\fP char * name)"

.PP
Get a scancode from a human-readable name\&. 
.PP
\fBRenvoie:\fP
.RS 4
scancode, or SDL_SCANCODE_UNKNOWN if the name wasn't recognized
.RE
.PP
\fBVoir également:\fP
.RS 4
\fBSDL_Scancode\fP 
.RE
.PP

.SS "\fBDECLSPEC\fP \fBconst\fP char* \fBSDLCALL\fP SDL_GetScancodeName (\fBSDL_Scancode\fP scancode)"

.PP
Get a human-readable name for a scancode\&. 
.PP
\fBRenvoie:\fP
.RS 4
A pointer to the name for the scancode\&. If the scancode doesn't have a name, this function returns an empty string ('')\&.
.RE
.PP
\fBVoir également:\fP
.RS 4
\fBSDL_Scancode\fP 
.RE
.PP

.SS "\fBDECLSPEC\fP \fBSDL_bool\fP \fBSDLCALL\fP SDL_HasScreenKeyboardSupport (\fBvoid\fP)"

.PP
Returns whether the platform has some screen keyboard support\&. 
.PP
\fBRenvoie:\fP
.RS 4
SDL_TRUE if some keyboard support is available else SDL_FALSE\&.
.RE
.PP
\fBNote:\fP
.RS 4
Not all screen keyboard functions are supported on all platforms\&.
.RE
.PP
\fBVoir également:\fP
.RS 4
\fBSDL_IsScreenKeyboardShown()\fP 
.RE
.PP

.SS "\fBDECLSPEC\fP \fBSDL_bool\fP \fBSDLCALL\fP SDL_IsScreenKeyboardShown (\fBSDL_Window\fP * window)"

.PP
Returns whether the screen keyboard is shown for given window\&. 
.PP
\fBParamètres:\fP
.RS 4
\fIwindow\fP The window for which screen keyboard should be queried\&.
.RE
.PP
\fBRenvoie:\fP
.RS 4
SDL_TRUE if screen keyboard is shown else SDL_FALSE\&.
.RE
.PP
\fBVoir également:\fP
.RS 4
\fBSDL_HasScreenKeyboardSupport()\fP 
.RE
.PP

.SS "\fBDECLSPEC\fP \fBSDL_bool\fP \fBSDLCALL\fP SDL_IsTextInputActive (\fBvoid\fP)"

.PP
Return whether or not Unicode text input events are enabled\&. 
.PP
\fBVoir également:\fP
.RS 4
\fBSDL_StartTextInput()\fP 
.PP
\fBSDL_StopTextInput()\fP 
.RE
.PP

.SS "\fBDECLSPEC\fP \fBvoid\fP \fBSDLCALL\fP SDL_SetModState (\fBSDL_Keymod\fP modstate)"

.PP
Set the current key modifier state for the keyboard\&. 
.PP
\fBNote:\fP
.RS 4
This does not change the keyboard state, only the key modifier flags\&. 
.RE
.PP

.SS "\fBDECLSPEC\fP \fBvoid\fP \fBSDLCALL\fP SDL_SetTextInputRect (\fBSDL_Rect\fP * rect)"

.PP
Set the rectangle used to type Unicode text inputs\&. This is used as a hint for IME and on-screen keyboard placement\&. 
.PP
\fBVoir également:\fP
.RS 4
\fBSDL_StartTextInput()\fP 
.RE
.PP

.SS "\fBDECLSPEC\fP \fBvoid\fP \fBSDLCALL\fP SDL_StartTextInput (\fBvoid\fP)"

.PP
Start accepting Unicode text input events\&. This function will show the on-screen keyboard if supported\&. 
.PP
\fBVoir également:\fP
.RS 4
\fBSDL_StopTextInput()\fP 
.PP
\fBSDL_SetTextInputRect()\fP 
.PP
\fBSDL_HasScreenKeyboardSupport()\fP 
.RE
.PP

.SS "\fBDECLSPEC\fP \fBvoid\fP \fBSDLCALL\fP SDL_StopTextInput (\fBvoid\fP)"

.PP
Stop receiving any text input events\&. This function will hide the on-screen keyboard if supported\&. 
.PP
\fBVoir également:\fP
.RS 4
\fBSDL_StartTextInput()\fP 
.PP
\fBSDL_HasScreenKeyboardSupport()\fP 
.RE
.PP

.SH "Auteur"
.PP 
Généré automatiquement par Doxygen pour Arcade à partir du code source\&.
