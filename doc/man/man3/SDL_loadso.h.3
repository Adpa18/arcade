.TH "/home/wery_a/rendu/CPP/cpp_arcade/library/sdl2/include/SDL_loadso.h" 3 "Jeudi 31 Mars 2016" "Version 1" "Arcade" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/home/wery_a/rendu/CPP/cpp_arcade/library/sdl2/include/SDL_loadso.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'SDL_stdinc\&.h'\fP
.br
\fC#include 'SDL_error\&.h'\fP
.br
\fC#include 'begin_code\&.h'\fP
.br
\fC#include 'close_code\&.h'\fP
.br

.SS "Fonctions"

.in +1c
.ti -1c
.RI "\fBDECLSPEC\fP \fBvoid\fP *\fBSDLCALL\fP \fBSDL_LoadObject\fP (\fBconst\fP char *sofile)"
.br
.ti -1c
.RI "\fBDECLSPEC\fP \fBvoid\fP *\fBSDLCALL\fP \fBSDL_LoadFunction\fP (\fBvoid\fP *handle, \fBconst\fP char *\fBname\fP)"
.br
.ti -1c
.RI "\fBDECLSPEC\fP \fBvoid\fP \fBSDLCALL\fP \fBSDL_UnloadObject\fP (\fBvoid\fP *handle)"
.br
.in -1c
.SH "Description détaillée"
.PP 
System dependent library loading routines
.PP
Some things to keep in mind: 
.PD 0

.IP "\(bu" 2
These functions only work on C function names\&. Other languages may have name mangling and intrinsic language support that varies from compiler to compiler\&. 
.IP "\(bu" 2
Make sure you declare your function pointers with the same calling convention as the actual library function\&. Your code will crash mysteriously if you do not do this\&. 
.IP "\(bu" 2
Avoid namespace collisions\&. If you load a symbol from the library, it is not defined whether or not it goes into the global symbol namespace for the application\&. If it does and it conflicts with symbols in your code or other shared libraries, you will not get the results you expect\&. :) 
.PP

.PP
Définition dans le fichier \fBSDL_loadso\&.h\fP\&.
.SH "Documentation des fonctions"
.PP 
.SS "\fBDECLSPEC\fP \fBvoid\fP* \fBSDLCALL\fP SDL_LoadFunction (\fBvoid\fP * handle, \fBconst\fP char * name)"
Given an object handle, this function looks up the address of the named function in the shared object and returns it\&. This address is no longer valid after calling \fBSDL_UnloadObject()\fP\&. 
.SS "\fBDECLSPEC\fP \fBvoid\fP* \fBSDLCALL\fP SDL_LoadObject (\fBconst\fP char * sofile)"
This function dynamically loads a shared object and returns a pointer to the object handle (or NULL if there was an error)\&. The 'sofile' parameter is a system dependent name of the object file\&. 
.SS "\fBDECLSPEC\fP \fBvoid\fP \fBSDLCALL\fP SDL_UnloadObject (\fBvoid\fP * handle)"
Unload a shared object from memory\&. 
.SH "Auteur"
.PP 
Généré automatiquement par Doxygen pour Arcade à partir du code source\&.
