.TH "GameComponent" 3 "Jeudi 31 Mars 2016" "Version 1" "Arcade" \" -*- nroff -*-
.ad l
.nh
.SH NAME
GameComponent \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <GameComponent\&.hpp>\fP
.PP
Est dérivée de \fBAComponent\fP\&.
.SS "Types publics"

.in +1c
.ti -1c
.RI "enum \fBShapes\fP { \fBCUBE_LARGE\fP, \fBCUBE_MEDIUM\fP, \fBCUBE_SMALL\fP, \fBSPHERE_LARGE\fP, \fBSPHERE_MEDIUM\fP, \fBSPHERE_SMALL\fP }"
.br
.in -1c
.SS "Fonctions membres publiques"

.in +1c
.ti -1c
.RI "\fBGameComponent\fP (\fBVector2\fP< double > \fBconst\fP &pos, \fBAComponent::ComponentColor\fP \fBcolor\fP, \fBShapes\fP sprite3D, \fBstd::string\fP \fBconst\fP &spriteText, \fBstd::string\fP \fBconst\fP &sprite2D)"
.br
.ti -1c
.RI "virtual \fB~GameComponent\fP ()"
.br
.ti -1c
.RI "\fBGameComponent\fP (\fBVector2\fP< double > \fBconst\fP &pos, \fBVector2\fP< double > \fBconst\fP &\fBsize\fP, \fBComponentColor\fP \fBcolor\fP, char \fBconst\fP &spriteText, \fBstd::string\fP \fBconst\fP &sprite2D, \fBShapes\fP sprite3D)"
.br
.ti -1c
.RI "\fBstd::string\fP \fBconst\fP & \fBgetSpriteText\fP () \fBconst\fP "
.br
.ti -1c
.RI "\fBstd::string\fP \fBconst\fP & \fBgetSprite2D\fP () \fBconst\fP "
.br
.ti -1c
.RI "\fBShapes\fP \fBgetSprite3D\fP () \fBconst\fP "
.br
.ti -1c
.RI "\fBvoid\fP \fBsetSpriteText\fP (\fBconst\fP char &spriteText)"
.br
.ti -1c
.RI "\fBvoid\fP \fBsetSpriteText\fP (\fBconst\fP \fBstd::string\fP &spriteText)"
.br
.ti -1c
.RI "\fBvoid\fP \fBsetSprite2D\fP (\fBconst\fP \fBstd::string\fP &sprite2D)"
.br
.ti -1c
.RI "\fBvoid\fP \fBsetSprite3D\fP (\fBShapes\fP sprite3D)"
.br
.ti -1c
.RI "\fBVector2\fP< double > \fBconst\fP & \fBgetDim\fP () \fBconst\fP "
.br
.in -1c
.SH "Description détaillée"
.PP 
Définition à la ligne 8 du fichier GameComponent\&.hpp\&.
.SH "Documentation des énumérations membres"
.PP 
.SS "enum \fBGameComponent::Shapes\fP"

.PP
\fBValeurs énumérées\fP
.in +1c
.TP
\fB\fICUBE_LARGE \fP\fP
.TP
\fB\fICUBE_MEDIUM \fP\fP
.TP
\fB\fICUBE_SMALL \fP\fP
.TP
\fB\fISPHERE_LARGE \fP\fP
.TP
\fB\fISPHERE_MEDIUM \fP\fP
.TP
\fB\fISPHERE_SMALL \fP\fP
.PP
Définition à la ligne 10 du fichier GameComponent\&.hpp\&.
.SH "Documentation des constructeurs et destructeur"
.PP 
.SS "GameComponent::GameComponent (\fBVector2\fP< double > \fBconst\fP & pos, \fBAComponent::ComponentColor\fP color, \fBShapes\fP sprite3D, \fBstd::string\fP \fBconst\fP & spriteText, \fBstd::string\fP \fBconst\fP & sprite2D)"

.PP
Définition à la ligne 13 du fichier GameComponent\&.cpp\&.
.SS "GameComponent::~GameComponent ()\fC [virtual]\fP"

.PP
Définition à la ligne 32 du fichier GameComponent\&.cpp\&.
.SS "GameComponent::GameComponent (\fBVector2\fP< double > \fBconst\fP & pos, \fBVector2\fP< double > \fBconst\fP & size, \fBComponentColor\fP color, char \fBconst\fP & spriteText, \fBstd::string\fP \fBconst\fP & sprite2D, \fBShapes\fP sprite3D)"

.PP
Définition à la ligne 23 du fichier GameComponent\&.cpp\&.
.SH "Documentation des fonctions membres"
.PP 
.SS "\fBVector2\fP< double > \fBconst\fP & GameComponent::getDim () const"

.PP
Définition à la ligne 70 du fichier GameComponent\&.cpp\&.
.SS "\fBstd::string\fP \fBconst\fP & GameComponent::getSprite2D () const"

.PP
Définition à la ligne 40 du fichier GameComponent\&.cpp\&.
.SS "\fBGameComponent::Shapes\fP GameComponent::getSprite3D () const"

.PP
Définition à la ligne 45 du fichier GameComponent\&.cpp\&.
.SS "\fBstd::string\fP \fBconst\fP & GameComponent::getSpriteText () const"

.PP
Définition à la ligne 35 du fichier GameComponent\&.cpp\&.
.SS "\fBvoid\fP GameComponent::setSprite2D (\fBconst\fP \fBstd::string\fP & sprite2D)"

.PP
Définition à la ligne 60 du fichier GameComponent\&.cpp\&.
.SS "\fBvoid\fP GameComponent::setSprite3D (\fBShapes\fP sprite3D)"

.PP
Définition à la ligne 65 du fichier GameComponent\&.cpp\&.
.SS "\fBvoid\fP GameComponent::setSpriteText (\fBconst\fP char & spriteText)"

.PP
Définition à la ligne 50 du fichier GameComponent\&.cpp\&.
.SS "\fBvoid\fP GameComponent::setSpriteText (\fBconst\fP \fBstd::string\fP & spriteText)"

.PP
Définition à la ligne 55 du fichier GameComponent\&.cpp\&.

.SH "Auteur"
.PP 
Généré automatiquement par Doxygen pour Arcade à partir du code source\&.
